package client.gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.Calendar;

import javax.swing.Box;
import javax.swing.JApplet;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

import client.communication.Communication;
import client.event.ActionMouseKeyForCharFrame;
import client.people.People;

public class ChatFrame extends JApplet{
	private static final long serialVersionUID = 1L;
	private Communication communication;
	private JScrollPane scrollpane,scrollinput;
	private JTextPane textarea;
	private JTextPane textfield;
	private JButton button;
	private JPanel panel_showBot;
	private JPanel panel_bot = new JPanel();
	private JPanel panel_people = new JPanel();
	private People people=new People();
	private ActionMouseKeyForCharFrame amk = new ActionMouseKeyForCharFrame(this);
	public ChatFrame(){
		super();
		panel_people.setLayout(new GridLayout(0,1));
		
		textarea=new JTextPane();
		textarea.setEditable(false); 
		
		scrollpane=new JScrollPane();
		scrollpane.getViewport().add(textarea);
		textfield=new JTextPane();
		textfield.addKeyListener(amk);
		
		scrollinput=new JScrollPane();
		scrollinput.getViewport().add(textfield);
		
		button=new JButton("发送");
		button.addActionListener(amk);
		Container content=this.getContentPane();

		content.setLayout(new BorderLayout());
		
		Box panel_char= Box.createVerticalBox();
		//panel_char.setLayout(new BorderLayout());
		panel_char.add(scrollpane);
		textarea.setPreferredSize(new Dimension(800,600));	
		textfield.setPreferredSize(new Dimension(700, 200));
		
		JPanel panel_input= new JPanel();
		panel_input.setLayout(new BorderLayout());
		panel_input.add(scrollinput,BorderLayout.CENTER);
		panel_input.add(button,BorderLayout.EAST);
		panel_char.add(panel_input);
		
		panel_showBot= createShowBotPanel();
		
		content.add(panel_char,BorderLayout.CENTER);
		content.add(panel_showBot,BorderLayout.EAST);
		
		//this.setTitle("机器人聊天框");
		setBounds(300,100,800,600);
		repaintPanel_people();
		this.setVisible(true);
		initBot();
	}
	public void initBot(){
		JLabel label=null;
		try {
			label=new JLabel("");
			label.setText("正在连接机器人。。。");
			panel_bot.add(label);
			
			initCommunication();
			label.setText("<html>1:在输入字符串前面加上’%’，可以进行搜索。<br>" +
					"2：输入teacher进入训练模式（须先登录）。<br>" +
					"3：输入end退出训练模式。</html>");
		} catch (Exception e) {
			label.setText("连接失败");
			JOptionPane.showMessageDialog(null, "连接服务器失败！");
			System.out.println(e.getMessage());
		}
	}
	/**
	 * 提示
	 * @param message 
	 */
	public void prompt(String message){
		JOptionPane.showMessageDialog(this, message);
	}
	/**
	 * 初始化通信模块
	 * @throws Exception
	 */
	public void initCommunication() throws Exception{
			communication = new Communication(this);
			communication.start();
	}
	public JPanel createShowBotPanel(){
		JPanel panel_showBot= new JPanel();
		panel_showBot.setLayout(new BorderLayout());
		panel_showBot.add(panel_people,BorderLayout.NORTH);
		panel_showBot.add(panel_bot,BorderLayout.CENTER);
		return panel_showBot;
	}
	public void repaintPanel_people(){
		panel_people.removeAll();
		if(people.getId()==1){
			JLabel label_1 = new JLabel("用户");
			JLabel label_2 = new JLabel(people.getName());
			JLabel label_3 = new JLabel(people.getStatus());
			JButton button_train = new JButton("开始训练");
			button_train.addActionListener(amk);
 			panel_people.add(label_1);
 			panel_people.add(label_2);
 			panel_people.add(label_3);
 			panel_people.add(button_train);
 			this.validate();
		} else {
			JLabel label_1 = new JLabel("游客");
			JButton button_login = new JButton("登录");
			button_login.addActionListener(amk);
			panel_people.add(label_1);
			panel_people.add(button_login);
			this.validate();
		}
	}
	/**
	 * 添加消息到聊天框中
	 * @param message:要添加的内容
	 */
	public void addChatContent(String message){
		addChatContent("me",message);
	}
	public void addChatContent(String name,String message){
		Calendar ca=Calendar.getInstance();
		int h=ca.get(Calendar.HOUR_OF_DAY);
		int m=ca.get(Calendar.MINUTE);
		int s=ca.get(Calendar.SECOND);
	    addPerson(name+"   "+h+":"+m+":"+s+"\n");
	    addContent(""+message+"\n");
		textarea.setCaretPosition(textarea.getDocument().getLength());
	}
	public void addContent(String content){
		addContent(content,Color.black);
	}
	public void addContent(String content,Color color){
		SimpleAttributeSet attrset=new SimpleAttributeSet();
		StyleConstants.setFontSize(attrset,14);
		StyleConstants.setAlignment(attrset, StyleConstants.ALIGN_LEFT);
		StyleConstants.setLeftIndent(attrset, 20);
		insert(content,attrset);
	}
	public void addPerson(String name){
		SimpleAttributeSet attrset=new SimpleAttributeSet();
		StyleConstants.setForeground(attrset,Color.blue);
		StyleConstants.setFontSize(attrset,12);
		insert(name,attrset);
	}
	public void insert(String str,AttributeSet attrset){
		Document docs=textarea.getDocument();
		try{
			docs.insertString(docs.getLength(),str,attrset); 	    	
		}catch(BadLocationException ble){
			System.out.println("BadLocationException:"+ble);	
		}
	}
	/**
	 * 获取输入框中的字符
	 * @return:字符
	 */
	public String getSendingMessage(){
		return textfield.getText();
	}
	/**
	 * 清空输入框
	 */
	public void setTextFieldEmpty(){
		textfield.setText("");
	}
	public Communication getCommunication(){
		return this.communication;
	}
	public People getPeople(){
		return this.people;
	}
	public JButton getSendButton(){
		return this.button;
	}
	public void init(){
		
	}
	public void destroy(){
		
	}
	public static void main(String[] args) {
		JFrame frame = new JFrame();
		ChatFrame cf = new ChatFrame();
		frame.add(cf);
		frame.setVisible(true);
		frame.setBounds(200, 100,cf.getX(), cf.getY());
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
}
